<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="omni_steering" params="">
		<gazebo>
	    <plugin name="omni_steering" filename="libgazebo_ros_planar_move.so">
	      <commandTopic>cmd_vel</commandTopic>
	      <odometryTopic>odom</odometryTopic>
	      <odometryFrame>odom</odometryFrame>
	      <odometryRate>50.0</odometryRate>
	      <cmdTimeout>1.00</cmdTimeout>
	      <robotBaseFrame>base_footprint</robotBaseFrame>
	      <publishTF>true</publishTF>
	    </plugin>
	  </gazebo>


        <!--<gazebo>
        	<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
	            <alwaysOn>true</alwaysOn>
	            <updateRate>50.0</updateRate>
	            <bodyName>mybot_base_link</bodyName>
	            <topicName>ground_truth/state</topicName>
	            <gaussianNoise>0.01</gaussianNoise>
	            <frameName>world</frameName>
	            <xyzOffsets>0 0 0</xyzOffsets>
	            <rpyOffsets>0 0 0</rpyOffsets>
	        </plugin>
	      </gazebo>-->
	        
	        <gazebo reference="sensor_laser">
						<sensor type="gpu_ray" name="head_hokuyo_sensor">
				      <pose>0 0 0 0 0 0</pose>
				      <visualize>false</visualize>
				      <update_rate>40</update_rate>
				      <ray>
								<scan>
							  	<horizontal>
								    <samples>720</samples>
								    <resolution>1</resolution>
								    <min_angle>-1.570796</min_angle>
								    <max_angle>1.570796</max_angle>
							  	</horizontal>
								</scan>
								<range>
								  <min>0.10</min>
								  <max>30.0</max>
								  <resolution>0.01</resolution>
								</range>
								<noise>
								  <type>gaussian</type>
								
								  <mean>0.0</mean>
								  <stddev>0.01</stddev>
								</noise>
							</ray>
					  <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
							<topicName>/radiation/laser/scan</topicName>
							<frameName>sensor_laser</frameName>
			      </plugin>
					</sensor>
 	 			</gazebo>

			 	 						<!-- camera -->
			  <gazebo reference="camera_link">
			    <sensor type="camera" name="camera1">
			      <update_rate>30.0</update_rate>
			      <camera name="head">
			        <horizontal_fov>1.3962634</horizontal_fov>
			        <image>
			          <width>800</width>
			          <height>800</height>
			          <format>R8G8B8</format>
			        </image>
			        <clip>
			          <near>0.02</near>
			          <far>300</far>
			        </clip>
			        <noise>
			          <type>gaussian</type>
			          <!-- Noise is sampled independently per pixel on each frame.
			               That pixel's noise value is added to each of its color
			               channels, which at that point lie in the range [0,1]. -->
			          <mean>0.0</mean>
			          <stddev>0.007</stddev>
			        </noise>
			      </camera>

			      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
			        <alwaysOn>true</alwaysOn>
			        <updateRate>0.0</updateRate>
			        <cameraName>omni/camera1</cameraName>
			        <imageTopicName>omni_image</imageTopicName>
			        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
			        <frameName>camera_link</frameName>
			        <hackBaseline>0.07</hackBaseline>
			        <distortionK1>0.0</distortionK1>
			        <distortionK2>0.0</distortionK2>
			        <distortionK3>0.0</distortionK3>
			        <distortionT1>0.0</distortionT1>
			        <distortionT2>0.0</distortionT2>
			      </plugin>
			    </sensor>
			  </gazebo> 

			  <gazebo>
			  	<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			  		<robotNamespace>omni_controller</robotNamespace>
			  		<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
			  	</plugin>
			  </gazebo>



			    <!--<sdf version="1.4">
				    <world name="default">

				      <include>
				        <uri>model://sun</uri>
				      </include>


				      <include>


				        <uri>model://ground_plane</uri>
				      </include>

				         <include>
				        <pose>0 10 0 0 0 0</pose>
				         <gravity>0 0 -9.81</gravity>
				        <uri>model://button_panel</uri>

				      </include>

				      <gravity>1</gravity>
				      <self_collide>1</self_collide>

				    </world>
				  </sdf>-->





  </xacro:macro>

</robot>






